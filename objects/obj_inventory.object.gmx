<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Declaration of variables

/*
0 = Chlorine
1 = Helium
2 = Hydrogen
3 = Iodine
4 = Neon
5 = Nitrogen
6 = Oxygen
7 = Phosphorus
*/

globalvar showInv; //Display the inventory? Boolean
showInv = true;

globalvar maxItems; //Total items slots
maxItems = 8;


for(i = 0; i &lt; maxItems; i += 1)
{
    global.inventory[i] = -1;
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw inventory items and rectangle

if(showInv)
{ 
    var x1,x2,y1,y2;
    x1 = view_xview[0];
    x2 = x1 + view_wview[0];
    y1 = view_yview[0];
    //y2 = y1 + 64;
    
    separationWidth = 64;
    separationHeight = 128;
    
    xStart = 128;
    xEnd = 416;
    yStart = 128;
    yEnd = 256;
    
    y2 = y1 + 460;
    
    /************************
    Atributes of the rectangle
    **************************/
    /*draw_set_color(c_dkgray);
    draw_set_alpha(0.8);
    draw_rectangle(x1,y1,x2,y2,0);
    draw_set_alpha(1);*/
    /**************************/ 
    
   /* for(i=0; i&lt; maxItems; i += 1)
    {
       // for(j=0; j &lt; 5; j+=1)
        //{
        draw_sprite(spr_border,0,x1+160+(j*40),y1+64+(i*10)); //Draw the rectangle
       // if (global.inventory[i] != -1) //if inventory is not full
          //  {
                //draw_sprite(spr_orbs,global.inventory[i],x1+160+(j*40),y1+64+(i*40)); //Draw sprite of type (spr_item), select the position of the item in the arraylist (spr_item) and the x, y where it draws it.  
            
         //   draw_sprite(spr_orbs,global.inventory[i],x1+160,y1+64+(i*40)); //Draw sprite of type (spr_item), select the position of the item in the arraylist (spr_item) and the x, y where it draws it.  
         
          //  }
        //}
 //   }
  
   /* 
    for (i = 0; i &lt; maxItems; i += 1)
    {
        if (i &lt; 5){
        //draw_sprite(spr_border,0,x1+24+(i * 40),y2-44);
        draw_sprite(spr_border,0,x1+160+(i*40),y1+64);
        }
        if (i &gt;= 5 &amp;&amp; i &lt; 9){
         
        draw_sprite(spr_border,0,x1+160+(i*40),y1+64+40);
        }
        if (global.inventory[i] != -1)
        {
            //draw_sprite(spr_item,global.inventory[i],x1+24+(i * 40),y2-44);
           // draw_sprite(spr_item,global.inventory[i],x1+160,y1+64+(i*40));
             if (i &lt; 5){
        
        draw_sprite(spr_item,global.inventory[i],x1+160+(i*40),y1+64);
        }
        if (i &gt;= 5 &amp;&amp; i &lt; 9){
         
        draw_sprite(spr_item,global.inventory[i],x1+160+(i*40),y1+64+40);
        }
            
        }
    }*/
    
    for (i = 0; i &lt; maxItems; i++){
     if (global.inventory[i] != -1)
        {   
    if(i &lt; 4){
        draw_sprite(spr_orbs, global.inventory[i], xStart + i* (sprite_get_width(spr_item) +  separationWidth), yStart);
    }
    else if (i &gt;= 4){
        draw_sprite(spr_orbs, global.inventory[i], xStart + (i-4)* (sprite_get_width(spr_item) +  separationWidth), yStart + separationHeight);
    }
        }
        
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="78">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Borrar objetos

scr_itemdrop(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="77">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///AÃ±adir objetos


var addItem;

addItem = scr_itempickup(0);

if(addItem == 0)
{
    //show_message("inventory is full!");
    //Inventory is full!!!
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Volver a sala principal

room_goto(room_ingame_menu);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
