<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_DialogueBox</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-500</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables
var myMessage, //The message to be displayed
maxLength, //Max width of the displayed message
maxHeight, //Max height of the displayed message
messageIndex, //Where in the array of myMessage we currently are
currentText, //Used to display the text one character at a time, it's what's currently displaying
position; //A counter, to know how much of the message to copy at once
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Forward displayed text
//If the message isn't done and the player presses space,
//This will display the entirety of the message at once
position = string_length(myMessage[messageIndex]);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Move through the dialogue
//Checks if space is pressed and if the text on screen is the full message to displayed
if(keyboard_check_pressed(vk_space) &amp;&amp; position &gt;= string_length(myMessage[messageIndex])) {
    ++messageIndex; //Move onto the next message to be displayed
    position = 0; //Reset the starting point
    currentText = ""; //Reset the currentText
    //If there's no more messages from the NPC &amp; no choices, then end the conversation
    if(messageIndex &gt;= array_length_1d(myMessage) &amp;&amp; !hasChoices) {
        //Destroy the object dialogueBox
        with(objDialogueBox)
            instance_destroy();
        //Set it so hero can move
        obj_hero.alarm[0] = 10;
    }
    //If there are options
    else if(messageIndex &gt;= array_length_1d(myMessage) &amp;&amp; hasChoices) {
        //Still destroy the dialogueBox
        with(objDialogueBox)
            instance_destroy();
        //But call the script
        scrShowChoices();
    }
}
//If it's still adding text, it will add all the text at once
else if(keyboard_check_pressed(vk_space) &amp;&amp; position &lt; string_length(myMessage[messageIndex]))
    alarm[0] = 5;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Add letters over time
//As long as we're still displaying a valid message (this keeps it from throwing an error)
if(messageIndex &lt; array_length_1d(myMessage)) {
    //If the message on screen is less than the full message to display
    if(string_length(currentText) &lt; string_length(myMessage[messageIndex])) {
        //Continue copying the string to what's being displayed
        currentText = string_copy(myMessage[messageIndex], 1, position);
        //1 letter at a time
        ++position;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw given text
draw_self(); //Otherwise it won't show up
//self.width = maxLength;
draw_set_colour(c_gray);
 //Draws the text according to the properties we've set up
draw_text_ext(bbox_left + 32, bbox_top + 32, currentText, 16, maxLength);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
