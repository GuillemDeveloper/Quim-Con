<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprit_hero_down</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1000</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Declaration and inicialitzation of variables
/*
if ((keyboard_check_pressed(vk_left))|| (keyboard_check_pressed(vk_right)) || (keyboard_check_pressed(vk_up)) || (keyboard_check_pressed(vk_down)))
{
image_speed=0.1; 
}
else{*/
image_speed=0; //Velocitat a la que el programa mou el sprite del personatge
//global.name="";
global.hablando=false;
global.heroDirection = direction;



global.isTalking = false; //Whether player is currently chatting

oxygenMe = false; //A variable that can update if a certain converstaion is had
neonMe = false;
chlorineMe = false;
heliumMe = false;
hydrogenMe = false;
iodineMe = false;
nitrogenMe = false;
phosphorusMe = false;

countO = 0;
countNe = 0;
countCl = 0;
countHe = 0;
countH = 0;
countI = 0;
countN = 0;
countP = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Sets isTalking
global.isTalking = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Depth Correction
//Depth lo que fa es que puguis posar objectes que sembli que estan 
//a diferent alçada que altres objectes, la traducció més literal sería profunditat
//depth = obj_hero.phy_position_y * -1; Falla al entrar en modo pausa

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement Input Logic

if ((room == room_ingame_menu)|| (room == rm_ingame_optionsKey) || (room == rm_Status) || (room == rm_Items)|| (room == room_saving))
{
    sprite_index = -1;
    exit; 
}
if(global.hablando==true){
    exit;
}
if(!global.isTalking){

if (keyboard_check(vk_left))//Comprova que la tecla s'ha apretat
{ 
    image_speed=0.1;
    sprite_index = sprit_hero_left; //Selecciona el sprite adequat per la tecla premuda
    global.indsprite = sprit_hero_left;
    obj_hero.phy_position_x -= 1; //Canvia la posició del personatge. En aquest cas, redueix la x en 1.
    
}
else if (keyboard_check(vk_right)){
    image_speed=0.1;
    sprite_index = sprit_hero_right;
    global.indsprite = sprit_hero_right;
    obj_hero.phy_position_x += 1;
}
else if (keyboard_check(vk_up)){
    image_speed=0.1;
    sprite_index = sprit_hero_up;
    global.indsprite = sprit_hero_up;
    obj_hero.phy_position_y -= 1;
}
else if (keyboard_check(vk_down)){
    image_speed=0.1;
    sprite_index = sprit_hero_down;
    global.indsprite = sprit_hero_down;
    obj_hero.phy_position_y += 1;
} else{
    image_speed=0;
}
}
//canviar els controls de if per un switch i case
/* mou el sprite pero no canvia la posició
if (keyboard_check_pressed(vk_anykey)){
switch (keyboard_key){

    case vk_left: 
        sprite_index = sprit_hero_left;
        obj_hero.phy_position_x -= 1;
        break;
    case vk_right:
        sprite_index = sprit_hero_right;
        obj_hero.phy_position_x += 1;
        break;
    case vk_up:
        sprite_index = sprit_hero_up;
        obj_hero.phy_position_y -= 1;
        break;  
    case vk_down:
        sprite_index = sprit_hero_down;
        obj_hero.phy_position_y += 1;
        break;
      
}
}
*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Mètode per parlar entre hero i npc2

if(collision_circle(x, y, 64, obj_npc2, true, true) &amp;&amp; !global.isTalking) {
    //If so, and they press space, begin a conversation
    if(keyboard_check_pressed(vk_space)) {
        //Set the global variable messageGiver
        messageGiver = collision_circle(x, y, 64, obj_npc2, true, true);
        //Set the global variable PCTalking
        PCTalking = self;
        //Set to true, so she can't move
        global.isTalking = true;
        //Default values of index1, index2
           if(object_get_visible(obj_orb_oxygen) == true){
            index1=7;
            index2=0;
        } else{
        index1 = 0;
        index2 = 0;
        }
        //Call the script
        scrDialogue();
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Mètode per parlar entre npc4 y hero

if(collision_circle(x, y, 64, obj_npc4, true, true) &amp;&amp; !global.isTalking) {
    //If so, and they press space, begin a conversation
    if(keyboard_check_pressed(vk_space)) {
        //Set the global variable messageGiver
        messageGiver = collision_circle(x, y, 64, obj_npc4, true, true);
        //Set the global variable PCTalking
        PCTalking = self;
        //Set to true, so she can't move
        global.isTalking = true;
        //Default values of index1, index2
        
        if(object_get_visible(obj_orb_neon) == true){
            index1=7;
            index2=0;
        } else{
        index1 = 0;
        index2 = 0;
        }
        //Call the script
        scrDialogue();
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Mètode per parlar entre npc6 (route1) y hero

if(collision_circle(x, y, 64, obj_npc6, true, true) &amp;&amp; !global.isTalking) {
    //If so, and they press space, begin a conversation
    if(keyboard_check_pressed(vk_space)) {
        //Set the global variable messageGiver
        messageGiver = collision_circle(x, y, 64, obj_npc6, true, true);
        //Set the global variable PCTalking
        PCTalking = self;
        //Set to true, so she can't move
        global.isTalking = true;
        //Default values of index1, index2
           if(object_get_visible(obj_orb_chlorine) == true){
            index1=7;
            index2=0;
        } else{
        index1 = 0;
        index2 = 0;
        }
        //Call the script
        scrDialogue();
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Mètode per parlar entre hero i npc5

if(collision_circle(x, y, 64, obj_npc5, true, true) &amp;&amp; !global.isTalking) {
    //If so, and they press space, begin a conversation
    if(keyboard_check_pressed(vk_space)) {
        //Set the global variable messageGiver
        messageGiver = collision_circle(x, y, 64, obj_npc5, true, true);
        //Set the global variable PCTalking
        PCTalking = self;
        //Set to true, so she can't move
        global.isTalking = true;
        //Default values of index1, index2
        index1 = 0;
        index2 = 0;
        //Call the script
        scrDialogue();
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Mètode per parlar entre hero i npc7

if(collision_circle(x, y, 64, obj_npc7, true, true) &amp;&amp; !global.isTalking) {
    //If so, and they press space, begin a conversation
    if(keyboard_check_pressed(vk_space)) {
        //Set the global variable messageGiver
        messageGiver = collision_circle(x, y, 64, obj_npc7, true, true);
        //Set the global variable PCTalking
        PCTalking = self;
        //Set to true, so she can't move
        global.isTalking = true;
        //Default values of index1, index2
          if(object_get_visible(obj_orb_hydrogen) == true){
            index1=7;
            index2=0;
        } else{
        index1 = 0;
        index2 = 0;
        }
        //Call the script
        scrDialogue();
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Mètode per parlar entre hero i npc8

if(collision_circle(x, y, 32, obj_npc8, true, true) &amp;&amp; !global.isTalking) {
    //If so, and they press space, begin a conversation
    if(keyboard_check_pressed(vk_space)) {
        //Set the global variable messageGiver
        messageGiver = collision_circle(x, y, 32, obj_npc8, true, true);
        //Set the global variable PCTalking
        PCTalking = self;
        //Set to true, so she can't move
        global.isTalking = true;
        //Default values of index1, index2
          if(object_get_visible(obj_orb_helium) == true){
            index1=7;
            index2=0;
        } else{
        index1 = 0;
        index2 = 0;
        }
        //Call the script
        scrDialogue();
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Mètode per parlar entre hero i npc9

if(collision_circle(x, y, 32, obj_npc9, true, true) &amp;&amp; !global.isTalking) {
    //If so, and they press space, begin a conversation
    if(keyboard_check_pressed(vk_space)) {
        //Set the global variable messageGiver
        messageGiver = collision_circle(x, y, 32, obj_npc9, true, true);
        //Set the global variable PCTalking
        PCTalking = self;
        //Set to true, so she can't move
        global.isTalking = true;
        //Default values of index1, index2
          if(object_get_visible(obj_orb_nitrogen) == true){
            index1=7;
            index2=0;
        } else{
        index1 = 0;
        index2 = 0;
        }
        //Call the script
        scrDialogue();
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Oxygen item selection
if(global.isTalking) {
    //While chatting, if player chooses the bite me option, set that variable to true
    if(index1 == 02 &amp;&amp; messageGiver.object_index == obj_npc2 &amp;&amp; currentChoice == 0)
        oxygenMe = true;
    else if(index1 == 02 &amp;&amp; messageGiver.object_index == obj_npc2 &amp;&amp; currentChoice == 1)
        oxygenMe = false;
}
//Then act on that information after the conversation
if(oxygenMe &amp;&amp; !global.isTalking) {
    if !object_get_visible(obj_orb_oxygen) object_set_visible(obj_orb_oxygen, true);
    if (countO == 0){
            audio_play_sound(snd_achievement, 0,0);
            countO+=1;
    } 

    
    //oxygenMe = false;
} 
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Mètode per parlar entre hero i evil_mage

if(collision_circle(x, y, 64, obj_evil_mage, true, true) &amp;&amp; !global.isTalking) {
    //If so, and they press space, begin a conversation
    if(keyboard_check_pressed(vk_space)) {
        //Set the global variable messageGiver
        messageGiver = collision_circle(x, y, 64, obj_evil_mage, true, true);
        //Set the global variable PCTalking
        PCTalking = self;
        //Set to true, so she can't move
        global.isTalking = true;
        //Default values of index1, index2
        index1 = 0;
        index2 = 0;
        //Call the script
        scrDialogue();
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Neon item selection
if(global.isTalking) {
    //While chatting, if player chooses the bite me option, set that variable to true
    if(index1 == 04 &amp;&amp; messageGiver.object_index == obj_npc4 &amp;&amp; index2 == 0)
        neonMe = true;
    else if(index1 == 04 &amp;&amp; messageGiver.object_index == obj_npc4 &amp;&amp; index2 != 0)
        neonMe = false;
}
//Then act on that information after the conversation
if(neonMe &amp;&amp; !global.isTalking) {
    if !object_get_visible(obj_orb_neon) object_set_visible(obj_orb_neon, true);
     if (countNe == 0){
            audio_play_sound(snd_achievement, 0,0);
            countNe += 1;
    } 

    //neonMe = false;
} 
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Chlorine item selection
if(global.isTalking) {
    //While chatting, if player chooses the bite me option, set that variable to true
    if(index1 == 06 &amp;&amp; messageGiver.object_index == obj_npc6 &amp;&amp; index2 == 0)
        chlorineMe = true;
    else if(index1 == 06 &amp;&amp; messageGiver.object_index == obj_npc6 &amp;&amp; index2 != 0)
        chlorineMe = false;
}
//Then act on that information after the conversation
if(chlorineMe &amp;&amp; !global.isTalking) {
    if !object_get_visible(obj_orb_chlorine) object_set_visible(obj_orb_chlorine, true);
      if (countCl == 0){
            audio_play_sound(snd_achievement, 0,0);
            countCl += 1;
    } 
    //neonMe = false;
} 
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Hydrogen item selection
if(global.isTalking) {
    //While chatting, if player chooses the bite me option, set that variable to true
    if(index1 == 04 &amp;&amp; messageGiver.object_index == obj_npc7 &amp;&amp; index2 == 0)
        hydrogenMe = true;
    else if(index1 == 04 &amp;&amp; messageGiver.object_index == obj_npc7 &amp;&amp; index2 != 0)
        hydrogenMe = false;
}
//Then act on that information after the conversation
if(hydrogenMe &amp;&amp; !global.isTalking) {
    if !object_get_visible(obj_orb_hydrogen) object_set_visible(obj_orb_hydrogen, true);
      if (countH == 0){
            audio_play_sound(snd_achievement, 0,0);
            countH += 1;
    } 
    //neonMe = false;
} 
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Nitrogen item selection
if(global.isTalking) {
    //While chatting, if player chooses the bite me option, set that variable to true
    if(index1 == 04 &amp;&amp; messageGiver.object_index == obj_npc9 &amp;&amp; index2 == 0)
        nitrogenMe = true;
    else if(index1 == 04 &amp;&amp; messageGiver.object_index == obj_npc9 &amp;&amp; index2 != 0)
        nitrogenMe = false;
}
//Then act on that information after the conversation
if(nitrogenMe &amp;&amp; !global.isTalking) {
    if !object_get_visible(obj_orb_nitrogen) object_set_visible(obj_orb_nitrogen, true);
      if (countN == 0){
            audio_play_sound(snd_achievement, 0,0);
            countN += 1;
    } 
    //neonMe = false;
} 
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Helium item selection
if(global.isTalking) {
    //While chatting, if player chooses the bite me option, set that variable to true
    if(index1 == 04 &amp;&amp; messageGiver.object_index == obj_npc8 &amp;&amp; index2 == 0)
        heliumMe = true;
    else if(index1 == 04 &amp;&amp; messageGiver.object_index == obj_npc8 &amp;&amp; index2 != 0)
        heliumMe = false;
}
//Then act on that information after the conversation
if(heliumMe &amp;&amp; !global.isTalking) {
    if !object_get_visible(obj_orb_helium) object_set_visible(obj_orb_helium, true);
      if (countHe == 0){
            audio_play_sound(snd_achievement, 0,0);
            countHe += 1;
    } 

} 
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Method to read route panels

if(collision_circle(x, y, 64, obj_cartel, true, true) &amp;&amp; !global.isTalking) {
    //If so, and they press space, begin a conversation
    if(keyboard_check_pressed(vk_space)) {
        //Set the global variable messageGiver
        messageGiver = collision_circle(x, y, 64, obj_cartel, true, true);
        //Set the global variable PCTalking
        PCTalking = self;
        //Set to true, so she can't move
        global.isTalking = true;
        //Default values of index1, index2
        index1 = 0;
        index2 = 0;
        //Call the script
        scrDialogue();
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Method to read locked doors

if(collision_circle(x, y, 16, obj_door_locked, true, true) &amp;&amp; !global.isTalking) {
    //If so, and they press space, begin a conversation
    if(keyboard_check_pressed(vk_space)) {
        //Set the global variable messageGiver
        messageGiver = collision_circle(x, y, 16, obj_door_locked, true, true);
        //Set the global variable PCTalking
        PCTalking = self;
        //Set to true, so she can't move
        global.isTalking = true;
        //Default values of index1, index2
        index1 = 0;
        index2 = 0;
        //Call the script
        scrDialogue();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_collider">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collide With
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>331</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_restart_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.100000001490116</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>14,16</point>
  </PhysicsShapePoints>
</object>
