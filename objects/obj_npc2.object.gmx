<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>npc2_down</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inicializar variables
image_speed=0;//Velocitat a la que el programa mou el sprite del personatge

_direction = "down";
alarm[0]= room_speed * 1.5;

global.hablandonpc2 = false;
drawText=false;
t=0;
line=0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (_direction == "down")
{
    _direction = "right";
}
else if (_direction == "right")
{
    _direction = "up";
}
else if (_direction == "up")
{
    _direction = "left";
}
else if (_direction == "left")
{
    _direction = "down";
}

alarm[0] = room_speed * 1.5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Depth Correction
//Depth lo que fa es que puguis posar objectes que sembli que estan 
//a diferent alçada que altres objectes, la traducció més literal sería profunditat
//depth = obj_npc1.phy_position_y * -1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handle Input Logic
//En proves

if (global.pause) 
{ 
    image_speed=0;
    exit;
}


if (place_meeting(x,y,obj_hero)){
    phy_position_x += 0;
    phy_position_y += 0;
  
    physics_set_density(0, 0);
    image_speed=0;
}

/*
if(global.hablandonpc2 == true){
 switch(global.heroDirection){
        case 0:
        sprite_index = npc2_left;
        break;
        
        case 90:
        sprite_index = npc2_down;
        break;
        
        case 180:
        sprite_index = npc2_right;
        break;
        
        case 270:
        sprite_index = npc2_up;
        break;
        }
        }
*/

/* else
{
    image_speed = 0.1;
    if (_direction == "up")
    {
        sprite_index = npc1_up;
        phy_position_y -= 1;
    } 
    else if (_direction == "down")
    {
        sprite_index = npc1_down;
        phy_position_y += 1;
    }
    else if (_direction == "left")
    {
        sprite_index = npc1_left;
        phy_position_x -= 1;
    }
    else if (_direction == "right")
    {
        sprite_index = npc1_right;
        phy_position_x += 1;
    }
}*/





//Opción para mover el npc, actualmente solo gira y se mueve así
/*
switch (count){

case 0: 
image_speed=0.1;
sprite_index = npc1_down;
obj_npc1.phy_position_y += 1;
break;
case 1: 
image_speed=0.1;
sprite_index = npc1_right;
obj_npc1.phy_position_x += 1;
break;
case 2:
image_speed=0.1; 
sprite_index = npc1_up;
obj_npc1.phy_position_y -= 1;
break;
case 3: 
image_speed=0.1;
sprite_index = npc1_left;
obj_npc1.phy_position_x -= 1;
break;

}



//var cont;



if (count==0){
sprite_index = npc1_down;
obj_npc1.phy_position_y += 1;
//count=1;
} else if (count==1){
sprite_index = npc1_right;
obj_npc1.phy_position_x += 1;
//count=2;
}else if (count==2){
sprite_index = npc1_up;
obj_npc1.phy_position_y -= 1;
//count=3;
}else if (count==3){
sprite_index = npc1_left;
obj_npc1.phy_position_x -= 1;
}
//var i;

/*

//Se mueve en línea recta sin detenerse por nada

if(obj_npc1.phy_position_x==obj_collider.phy_position_x)&amp;&amp; (obj_npc1.phy_position_y==obj_collider.phy_position_y){
      sprite_index = npc1_down;
     obj_npc1.phy_position_y += 1;
 } else{
  sprite_index = npc1_up;
 obj_npc1.phy_position_y-=1;
 }
*/







</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_collider">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collide With
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_hero">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collide With

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Dibujar rectangulo de texto y texto
/*
draw_self();
if(draw==true){
    draw_set_color(c_white);
    draw_rectangle(0,400,640,480,false);
    draw_set_color(c_black);
    draw_set_halign(fa_left);
    draw_set_valign(fa_right);
    draw_text(40,420,text);
}
*/

draw_self();
if(drawText==true){
    draw_set_color(c_white);
    //draw_rectangle(0,view_hview-128,view_wview,view_hview,false);
     draw_rectangle(0,400,640,480,false);
   //  draw_set_color(c_white);
   //  draw_rectangle(0,340,640,396,false);
    draw_set_color(c_black);
    
   // draw_text(32,view_hview-96,string_copy(text[line],1,t));
     draw_text(40,420,string_copy(text[line],1,t));
    // draw_text(40,360,"Claro que si");
    if(t&lt;=string_length(text[line])){
        t++;
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
if(distance_to_object(obj_hero)&lt;16){
    if(draw==false){
        draw=true;
    }
    else{
        draw=false;
    }
}
*/
///////////////Nuevo Método de dialogo/////////////////////

if(distance_to_object(obj_hero)&lt;16){ //Comprobar si heroe está cerca
   // var xx=obj_hero.x+16*cos(degtorad(obj_hero.image_angle));
   // var yy=obj_hero.y-16*sin(degtorad(obj_hero.image_angle));
   // if(collision_line(obj_hero.x, obj_hero.y, xx, yy, id, false, false)){
     if(collision_line(obj_npc2.x,obj_npc2.y,obj_hero.x, obj_hero.y, id, false, false)){

       
           
    //Empezar a hablar
    if(drawText==false){
        drawText=true;
        global.hablandonpc2 =true;
       
         if(object_get_sprite(obj_hero)==sprit_hero_right){
            sprite_index = npc2_left;
        }
       /* else if(object_get_sprite(obj_hero)==sprit_hero_up){
            sprite_index = npc2_down;
            }  
            /*else  if(object_get_sprite(obj_hero)==sprit_hero_left){
            sprite_index = npc2_right;
            } else  if(object_get_sprite(obj_hero)==sprit_hero_down){
            sprite_index = npc2_up;
            } */
        //obj_hero.free=false;
        t=0;
        line=0;
        /*if((keyboard_check(vk_left)) || (keyboard_check(vk_right)) || (keyboard_check(vk_up)) || (keyboard_check(vk_down)) || (keyboard_check(vk_escape))){
            
        }*/
        global.hablando=true;
        //nueva linea de texto
    } else if(line&lt;totalLines-1){
        t=0;
        line++;
        //end talking
    } else{
        drawText=false;
        global.hablando=false;
        global.hablandonpc2 = false;
        //scr_itempickup(1);
        //obj_hero.free=true;
    }
 }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>1</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
